name: Tests

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main, develop]

jobs:
  unit-and-integration:
    name: Unit & Integration Tests with Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

      - name: Coverage summary
        run: |
          echo "## 📊 Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ All tests passed with coverage analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Requirements" >> $GITHUB_STEP_SUMMARY
          echo "- Minimum coverage threshold: **80%**" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage focuses on business logic: services, utils, schemas" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📁 Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- HTML coverage report available in workflow artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Download the \`coverage-report\` artifact to view detailed HTML report" >> $GITHUB_STEP_SUMMARY

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase local instance
        run: supabase start

      - name: Setup environment variables
        run: |
          echo "PUBLIC_SUPABASE_URL=https://bvvztrdwsdymjzvahpwa.supabase.co" >> $GITHUB_ENV
          echo "PUBLIC_SUPABASE_ANON_KEY=$(supabase status --output json | jq -r '.anon_key')" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_ROLE_KEY=$(supabase status --output json | jq -r '.service_role_key')" >> $GITHUB_ENV
          echo "BASE_URL=http://localhost:4322" >> $GITHUB_ENV
          echo "E2E_TEST_USER_EMAIL=e2etest@gmail.com" >> $GITHUB_ENV
          echo "E2E_TEST_USER_PASSWORD=Example123" >> $GITHUB_ENV

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          PUBLIC_SUPABASE_URL: ${{ env.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY: ${{ env.PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ env.SUPABASE_SERVICE_ROLE_KEY }}
          BASE_URL: ${{ env.BASE_URL }}
          E2E_TEST_USER_EMAIL: ${{ env.E2E_TEST_USER_EMAIL }}
          E2E_TEST_USER_PASSWORD: ${{ env.E2E_TEST_USER_PASSWORD }}

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-results
          path: playwright-results/
          retention-days: 7

      - name: Stop Supabase
        if: always()
        run: supabase stop
